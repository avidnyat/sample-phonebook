<?xml version="1.0" encoding="utf-8"?>
<project name="C:\AVIDNYAT\silex\phoneDirectory.clpprj">
	<removed value=";"/><added value=""/><lastopfiles>
	</lastopfiles>
	<codestructure version="5.0">
		<phptree>
			<treenode node="ConfigurableRequirementsInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\ConfigurableRequirementsInterface.php;f0;37;1;54;;;;vpos;;v;;r&#xA;Description&#xA;     ConfigurableRequirementsInterface must be implemented by URL generators that can be configured whether an exception should be generated when the parameters do not match the requirements. It is also possible to disable the requirements check for URL generation completely.;;d0,38;;b0,0;;m">
				<treenode node="isStrictRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\ConfigurableRequirementsInterface.php;f11;53;42;53;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether to throw an exception on incorrect parameters. Null means the requirements check is deactivated completely.&#xA;&#xA;Return:&#xA;   |null;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="setStrictRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\ConfigurableRequirementsInterface.php;f11;45;51;45;;;;vpos;;v;;r&#xA;Description&#xA;     Enables or disables the exception on incorrect parameters. Passing null will deactivate the requirements check completely.&#xA;&#xA;Parameters:&#xA;    bool|null $enabled;;d-1,-1;;b1,0;;mbool|null $enabled;;p">
					<treenode node="enabled;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\ConfigurableRequirementsInterface.php;f42;45;50;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ExceptionInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\ExceptionInterface.php;f0;20;1;22;;;;vpos;;v;;r&#xA;Description&#xA;     ExceptionInterface.;;d0,21;;b0,0;;m">
			</treenode>
			<treenode node="GeneratorDumperInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumperInterface.php;f0;22;1;40;;;;vpos;;v;;r&#xA;Description&#xA;     GeneratorDumperInterface is the interface that all generator dumper classes must implement.;;d0,23;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumperInterface.php;f11;32;50;32;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dumps a set of routes to a string representation of executable code that can then be used to generate a URL of such a route.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options&#xA;&#xA;Return:&#xA;   Executable code;;d-1,-1;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumperInterface.php;f31;32;39;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRoutes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumperInterface.php;f11;39;31;39;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Gets the routes to dump.&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MatcherDumperInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumperInterface.php;f0;20;1;38;;;;vpos;;v;;r&#xA;Description&#xA;     MatcherDumperInterface is the interface that all matcher dumper classes must implement.;;d0,21;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumperInterface.php;f11;30;50;30;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dumps a set of routes to a string representation of executable code that can then be used to match a request against these routes.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options&#xA;&#xA;Return:&#xA;   Executable code;;d-1,-1;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumperInterface.php;f31;30;39;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRoutes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumperInterface.php;f11;37;31;37;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Gets the routes to dump.&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RedirectableUrlMatcherInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcherInterface.php;f0;20;1;34;;;;vpos;;v;;r&#xA;Description&#xA;     RedirectableUrlMatcherInterface knows how to redirect the user.;;d0,21;;b0,0;;m">
				<treenode node="redirect;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcherInterface.php;f11;33;59;33;;;;vpos;;varray;;r&#xA;Description&#xA;     Redirects the user to another URL.&#xA;&#xA;Parameters:&#xA;    string $path - The path info to redirect to&#xA;    string $route - The route name that matched&#xA;    string|null $scheme - The URL scheme (null to keep the current one)&#xA;&#xA;Return:&#xA;   An array of parameters;;d-1,-1;;b1,0;;mstring $path;;pstring $route;;pstring|null $scheme;;p">
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcherInterface.php;f29;33;34;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcherInterface.php;f36;33;42;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scheme;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcherInterface.php;f44;33;51;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="RequestContextAwareInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContextAwareInterface.php;f0;16;1;35;;;;vpos;;v;;r&#xA;Description&#xA;      api;;d0,17;;b0,0;;m">
				<treenode node="getContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContextAwareInterface.php;f11;34;32;34;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Gets the request context.&#xA;&#xA;Return:&#xA;   The context;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="setContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContextAwareInterface.php;f11;25;55;25;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the request context.&#xA;&#xA;Parameters:&#xA;    RequestContext $context - The context;;d-1,-1;;b1,0;;mRequestContext $context;;p">
					<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContextAwareInterface.php;f46;25;54;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="RequestMatcherInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RequestMatcherInterface.php;f0;22;1;38;;;;vpos;;v;;r&#xA;Description&#xA;     RequestMatcherInterface is the interface that all request matcher classes must implement.;;d0,23;;b0,0;;m">
				<treenode node="matchRequest;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RequestMatcherInterface.php;f11;37;50;37;;;;vpos;;varray;;r&#xA;Description&#xA;     Tries to match a request with a set of routes.&#xA;&#xA;Parameters:&#xA;    Request $request - The request to match&#xA;&#xA;Return:&#xA;   An array of parameters;;d-1,-1;;b1,0;;mRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RequestMatcherInterface.php;f41;37;49;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="RouteCompilerInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompilerInterface.php;f0;18;1;31;;;;vpos;;v;;r&#xA;Description&#xA;     RouteCompilerInterface is the interface that all RouteCompiler classes must implement.;;d0,19;;b0,0;;m">
				<treenode node="compile;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompilerInterface.php;f18;30;48;30;;;;vpos;;vCompiledRoute;;r&#xA;Description&#xA;     Compiles the current route instance.&#xA;&#xA;Parameters:&#xA;    Route $route - A Route instance&#xA;&#xA;Return:&#xA;   A CompiledRoute instance;;d-1,-1;;b1,5;;mRoute $route;;p">
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompilerInterface.php;f41;30;47;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="RouterInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouterInterface.php;f0;23;1;31;;;;vpos;;vUrlMatcherInterface;;cUrlGeneratorInterface;;c;;r&#xA;Description&#xA;     RouterInterface is the interface that all Router classes must implement.;;d0,24;;b0,0;;m">
				<treenode node="getRouteCollection;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouterInterface.php;f11;30;40;30;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Gets the RouteCollection instance associated with this Router.&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UrlGeneratorInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f0;33;1;87;;;;vpos;;vRequestContextAwareInterface;;c;;r&#xA;Description&#xA;     UrlGeneratorInterface is the interface that all URL generator classes must implement.;;d0,34;;b0,0;;m">
				<treenode node="ABSOLUTE_PATH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f9;43;23;43;;;;vpos;;v;;r&#xA;Description&#xA;     Generates an absolute path, e.g. &quot;/dir/file&quot;.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="ABSOLUTE_URL;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f9;38;22;38;;;;vpos;;v;;r&#xA;Description&#xA;     Generates an absolute URL, e.g. &quot;http://example.com/dir/file&quot;.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="NETWORK_PATH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f9;56;22;56;;;;vpos;;v;;r&#xA;Description&#xA;     Generates a network path, e.g. &quot;//example.com/dir/file&quot;. Such reference reuses the current scheme but specifies the host.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="RELATIVE_PATH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f9;50;23;50;;;;vpos;;v;;r&#xA;Description&#xA;     Generates a relative path based on the current request path, e.g. &quot;../parent-file&quot;.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="generate;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f11;86;96;86;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a URL or path for a specific route based on the given parameters.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the route&#xA;    mixed $parameters - An array of parameters&#xA;    bool|string $referenceType - The type of reference to be generated (one of the constants)&#xA;&#xA;Return:&#xA;   The generated URL;;d-1,-1;;b1,0;;mstring $name;;pmixed $parameters;;pbool|string $referenceType;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f29;86;34;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f36;86;47;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="referenceType;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php;f59;86;73;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="UrlMatcherInterface;PHP:Interface Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcherInterface.php;f0;24;1;42;;;;vpos;;vRequestContextAwareInterface;;c;;r&#xA;Description&#xA;     UrlMatcherInterface is the interface that all URL matcher classes must implement.;;d0,25;;b0,0;;m">
				<treenode node="match;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcherInterface.php;f11;41;36;41;;;;vpos;;varray;;r&#xA;Description&#xA;     Tries to match a URL path with a set of routes.&#xA;&#xA;Parameters:&#xA;    string $pathinfo - The path info to be parsed (raw format, i&#xA;&#xA;Return:&#xA;   An array of parameters;;d-1,-1;;b1,0;;mstring $pathinfo;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcherInterface.php;f26;41;35;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="AnnotationClassLoader;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f9;57;1;267;;;;vpos;;vLoaderInterface;;c;;r&#xA;Description&#xA;     AnnotationClassLoader loads routing information from a PHP class and its methods.;;d0,58;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f11;79;5;82;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    Reader $reader;;d4,80;;b1,0;;mReader $reader;;p">
					<treenode node="reader;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f39;79;46;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f14;132;5;165;;;;vpos;;v;;r;;d4,133;;b2,0;;mcollection;;pannot;;pglobals;;pclass;;pmethod;;p">
					<treenode node="annot;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f61;132;67;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f96;132;102;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f48;132;59;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="globals;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f69;132;77;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f122;132;129;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configureRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f23;266;120;266;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mroute;;pclass;;pmethod;;pannot;;p">
					<treenode node="annot;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f113;266;119;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f78;266;84;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f104;266;111;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f53;266;59;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f14;261;5;264;;;;vpos;;v;;r;;d4,262;;b2,0;;mpath;;pdefaults;;prequirements;;poptions;;phost;;pschemes;;pmethods;;pcondition;;p">
					<treenode node="condition;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f105;261;115;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f42;261;51;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="host;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f78;261;83;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="methods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f95;261;103;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f68;261;76;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f35;261;40;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f53;261;66;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="schemes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f85;261;93;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDefaultRouteName;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f14;197;5;206;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the default route name for a class method.&#xA;&#xA;Parameters:&#xA;    \ReflectionClass $class&#xA;    \ReflectionMethod $method;;d4,198;;b2,0;;m\ReflectionClass $class;;p\ReflectionMethod $method;;p">
					<treenode node="class;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f60;197;66;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f86;197;93;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getGlobals;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f14;208;5;259;;;;vpos;;v;;r;;d4,209;;b2,0;;mclass;;p">
					<treenode node="class;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f51;208;57;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getResolver;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f11;185;5;187;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,186;;b1,0;;m">
				</treenode>
				<treenode node="load;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f11;104;5;130;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Loads from annotations from a class.&#xA;&#xA;Parameters:&#xA;    string $class - A class name&#xA;    string|null $type - The resource type&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d4,105;;b1,0;;mstring $class;;pstring|null $type;;p">
					<treenode node="class;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f25;104;31;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f33;104;38;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setResolver;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f11;178;5;180;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,179;;b1,0;;mresolver;;p">
					<treenode node="resolver;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f56;178;65;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRouteAnnotationClass;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f11;89;5;92;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the annotation class to read route properties from.&#xA;&#xA;Parameters:&#xA;    string $class - A fully-qualified class name;;d4,90;;b1,0;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f44;89;50;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="supports;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f11;170;5;173;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,171;;b1,0;;mresource;;ptype;;p">
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f29;170;38;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f40;170;45;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultRouteIndex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f14;72;32;72;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="reader;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f14;62;21;62;;;;vposReader;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="routeAnnotationClass;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php;f14;67;35;67;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="AnnotationDirectoryLoader;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php;f0;22;1;76;;;;vpos;;vAnnotationFileLoader;;c;;r&#xA;Description&#xA;     AnnotationDirectoryLoader loads routing information from annotations set on PHP classes and methods.;;d0,23;;b0,0;;m">
				<treenode node="load;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php;f11;34;5;61;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Loads from annotations from a directory.&#xA;&#xA;Parameters:&#xA;    string $path - A directory path&#xA;    string|null $type - The resource type&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d4,35;;b1,0;;mstring $path;;pstring|null $type;;p">
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php;f25;34;30;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php;f32;34;37;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="supports;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php;f11;66;5;75;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,67;;b1,0;;mresource;;ptype;;p">
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php;f29;66;38;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php;f40;66;45;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="AnnotationFileLoader;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f0;24;1;120;;;;vpos;;vFileLoader;;c;;r&#xA;Description&#xA;     AnnotationFileLoader loads routing information from annotations set on a PHP class and its methods.;;d0,25;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f11;36;5;45;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    FileLocatorInterface $locator - A FileLocator instance&#xA;    AnnotationClassLoader $loader - An AnnotationClassLoader instance;;d4,37;;b1,0;;mFileLocatorInterface $locator;;pAnnotationClassLoader $loader;;p">
					<treenode node="loader;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f85;36;92;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locator;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f53;36;61;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findClass;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f14;85;5;119;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the full class name for the first class in the file.&#xA;&#xA;Parameters:&#xA;    string $file - A PHP file path&#xA;&#xA;Return:&#xA;   |false Full class name if found, false otherwise;;d4,86;;b2,0;;mstring $file;;p">
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f33;85;38;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f11;57;5;68;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Loads from annotations from a file.&#xA;&#xA;Parameters:&#xA;    string $file - A PHP file path&#xA;    string|null $type - The resource type&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d4,58;;b1,0;;mstring $file;;pstring|null $type;;p">
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f25;57;30;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f32;57;37;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="supports;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f11;73;5;76;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,74;;b1,0;;mresource;;ptype;;p">
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f29;73;38;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f40;73;45;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loader;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php;f14;26;21;26;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ApacheMatcherDumper;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f0;27;1;277;;;;vpos;;vMatcherDumper;;c;;r&#xA;Description&#xA;     Dumps a set of Apache mod_rewrite rules.;;d0,28;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f11;43;5;109;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dumps a set of Apache mod_rewrite rules.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options&#xA;&#xA;Return:&#xA;   A string to be used as Apache rewrite rules;;d4,44;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f31;43;39;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dumpRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f12;121;5;188;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dumps a single route.&#xA;&#xA;Parameters:&#xA;    string $name - Route name&#xA;    Route $route - The route&#xA;    array $options - Options&#xA;    bool $hostRegexUnique - Unique identifier for the host regex&#xA;&#xA;Return:&#xA;   The compiled route;;d4,122;;b3,0;;mstring $name;;pRoute $route;;parray $options;;pbool $hostRegexUnique;;p">
					<treenode node="hostRegexUnique;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f62;121;78;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f31;121;36;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f52;121;60;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f38;121;44;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="escape;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f19;232;5;253;;;;vpos;;vstring;;r&#xA;Description&#xA;     Escapes a string.&#xA;&#xA;Parameters:&#xA;    string $string - The string to be escaped&#xA;    string $char - The character to be escaped&#xA;    string $with - The character to be used for escaping&#xA;&#xA;Return:&#xA;   The escaped string;;d4,233;;b3,5;;mstring $string;;pstring $char;;pstring $with;;p">
					<treenode node="char;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f44;232;49;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f35;232;42;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="with;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f51;232;56;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRouteMethods;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f12;197;5;207;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns methods allowed for a route.&#xA;&#xA;Parameters:&#xA;    Route $route - The route&#xA;&#xA;Return:&#xA;   The methods;;d4,198;;b3,0;;mRoute $route;;p">
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f43;197;49;197;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normalizeValues;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f12;262;5;276;;;;vpos;;vstring;;r&#xA;Description&#xA;     Normalizes an array of values.&#xA;&#xA;Parameters:&#xA;    array $values&#xA;&#xA;Return:&#xA;   [];;d4,263;;b3,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f43;262;50;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="regexToApacheRegex;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f12;216;5;221;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a regex to make it suitable for mod_rewrite.&#xA;&#xA;Parameters:&#xA;    string $regex - The regex&#xA;&#xA;Return:&#xA;   The converted regex;;d4,217;;b3,0;;mstring $regex;;p">
					<treenode node="regex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php;f40;216;46;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ApacheUrlMatcher;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\ApacheUrlMatcher.php;f0;27;1;123;;;;vpos;;vUrlMatcher;;c;;r&#xA;Description&#xA;     ApacheUrlMatcher matches URL based on Apache mod_rewrite matching (see ApacheMatcherDumper).;;d0,28;;b0,0;;m">
				<treenode node="denormalizeValues;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\ApacheUrlMatcher.php;f12;107;5;122;;;;vpos;;varray;;r&#xA;Description&#xA;     Denormalizes an array of values.&#xA;&#xA;Parameters:&#xA;    string[] $values;;d4,108;;b3,0;;mstring[] $values;;p">
					<treenode node="values;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\ApacheUrlMatcher.php;f45;107;52;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\ApacheUrlMatcher.php;f11;40;5;98;;;;vpos;;varray;;r&#xA;Description&#xA;     Tries to match a URL based on Apache mod_rewrite matching.&#xA;&#xA;Parameters:&#xA;    string $pathinfo - The pathinfo to be parsed&#xA;&#xA;Return:&#xA;   An array of parameters;;d4,41;;b1,0;;mstring $pathinfo;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\ApacheUrlMatcher.php;f26;40;35;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ClosureLoader;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php;f0;25;1;51;;;;vpos;;vLoader;;c;;r&#xA;Description&#xA;     ClosureLoader loads routes from a PHP closure.;;d0,26;;b0,0;;m">
				<treenode node="load;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php;f11;37;5;40;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Loads a Closure.&#xA;&#xA;Parameters:&#xA;    \Closure $closure - A Closure&#xA;    string|null $type - The resource type&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d4,38;;b1,0;;m\Closure $closure;;pstring|null $type;;p">
					<treenode node="closure;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php;f25;37;33;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php;f35;37;40;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="supports;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php;f11;47;5;50;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,48;;b1,0;;mresource;;ptype;;p">
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php;f29;47;38;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php;f40;47;45;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CompiledRoute;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f0;18;30;18;;;;vpos;;v;;r&#xA;Description&#xA;     CompiledRoutes are returned by the RouteCompiler class.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DumperCollection;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f0;18;33;18;;;;vpos;;v;;r&#xA;Description&#xA;     Collection of routes.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DumperPrefixCollection;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f0;18;1;104;;;;vpos;;vDumperCollection;;c;;r&#xA;Description&#xA;     Prefix tree of routes preserving routes order.;;d0,19;;b0,0;;m">
				<treenode node="addPrefixRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f11;54;5;78;;;;vpos;;vDumperPrefixCollection;;r&#xA;Description&#xA;     Adds a route in the tree.&#xA;&#xA;Parameters:&#xA;    DumperRoute $route - The route&#xA;&#xA;Return:&#xA;   The node the route was added to;;d4,55;;b1,0;;mDumperRoute $route;;p">
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f47;54;53;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getPrefix;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f11;30;5;33;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the prefix.&#xA;&#xA;Return:&#xA;   The prefix;;d4,31;;b1,0;;m">
				</treenode>
				<treenode node="mergeSlashNodes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f11;85;5;103;;;;vpos;;v;;r&#xA;Description&#xA;     Merges nodes whose prefix ends with a slash.;;d4,86;;b1,0;;m">
				</treenode>
				<treenode node="setPrefix;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f11;40;5;43;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the prefix.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix;;d4,41;;b1,0;;mstring $prefix;;p">
					<treenode node="prefix;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f30;40;37;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prefix;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php;f12;23;19;23;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="DumperRoute;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f0;20;1;63;;;;vpos;;v;;r&#xA;Description&#xA;     Container for a Route.;;d0,21;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f11;38;5;42;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    string $name - The route name&#xA;    Route $route - The route;;d4,39;;b1,0;;mstring $name;;pRoute $route;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f32;38;37;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f45;38;51;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getName;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f11;49;5;52;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the route name.&#xA;&#xA;Return:&#xA;   The route name;;d4,50;;b1,0;;m">
				</treenode>
				<treenode node="getRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f11;59;5;62;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Returns the route.&#xA;&#xA;Return:&#xA;   The route;;d4,60;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f12;25;17;25;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php;f12;30;18;30;;;;vposRoute;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="GeneratorDumper;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumper.php;f9;20;1;44;;;;vpos;;vGeneratorDumperInterface;;c;;r&#xA;Description&#xA;     GeneratorDumper is the base class for all built-in generator dumpers.;;d0,21;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumper.php;f11;32;5;35;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    RouteCollection $routes - The RouteCollection to dump;;d4,33;;b1,0;;mRouteCollection $routes;;p">
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumper.php;f48;32;55;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRoutes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumper.php;f11;40;5;43;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,41;;b1,0;;m">
				</treenode>
				<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumper.php;f12;25;19;25;;;;vposRouteCollection;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="InvalidParameterException;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\InvalidParameterException.php;f0;20;39;20;;;;vpos;;v;;r&#xA;Description&#xA;     Exception thrown when a parameter is not valid.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MatcherDumper;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumper.php;f9;20;1;44;;;;vpos;;vMatcherDumperInterface;;c;;r&#xA;Description&#xA;     MatcherDumper is the abstract class for all built-in matcher dumpers.;;d0,21;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumper.php;f11;32;5;35;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    RouteCollection $routes - The RouteCollection to dump;;d4,33;;b1,0;;mRouteCollection $routes;;p">
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumper.php;f48;32;55;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRoutes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumper.php;f11;40;5;43;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,41;;b1,0;;m">
				</treenode>
				<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumper.php;f12;25;19;25;;;;vposRouteCollection;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="MethodNotAllowedException;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f0;22;39;22;;;;vpos;;v;;r&#xA;Description&#xA;     The resource was found but the request method is not allowed.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MissingMandatoryParametersException;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MissingMandatoryParametersException.php;f0;21;49;21;;;;vpos;;v;;r&#xA;Description&#xA;     Exception thrown when a route cannot be generated because of missing mandatory parameters.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="PhpFileLoader;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f0;26;1;71;;;;vpos;;vFileLoader;;c;;r&#xA;Description&#xA;     PhpFileLoader loads routes from a PHP file.;;d0,27;;b0,0;;m">
				<treenode node="includeFile;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f19;67;5;70;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Safe include. Used for scope isolation.&#xA;&#xA;Parameters:&#xA;    string $file - File to include&#xA;    PhpFileLoader $loader - the loader variable is exposed to the included file below;;d4,68;;b3,5;;mstring $file;;pPhpFileLoader $loader;;p">
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f40;67;45;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="loader;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f61;67;68;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f11;38;5;47;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Loads a PHP file.&#xA;&#xA;Parameters:&#xA;    string $file - A PHP file path&#xA;    string|null $type - The resource type&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d4,39;;b1,0;;mstring $file;;pstring|null $type;;p">
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f25;38;30;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f32;38;37;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="supports;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f11;54;5;57;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,55;;b1,0;;mresource;;ptype;;p">
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f29;54;38;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php;f40;54;45;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="PhpGeneratorDumper;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\PhpGeneratorDumper.php;f0;21;1;123;;;;vpos;;vGeneratorDumper;;c;;r&#xA;Description&#xA;     PhpGeneratorDumper creates a PHP class able to generate URLs for a given set of routes.;;d0,22;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\PhpGeneratorDumper.php;f11;37;5;74;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dumps a set of routes to a PHP class.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options&#xA;&#xA;Return:&#xA;   A PHP class representing the generator class;;d4,38;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\PhpGeneratorDumper.php;f31;37;39;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateDeclaredRoutes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\PhpGeneratorDumper.php;f12;82;5;101;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates PHP code representing an array of defined routes together with the routes properties (e.g. requirements).&#xA;&#xA;Return:&#xA;   PHP code;;d4,83;;b3,0;;m">
				</treenode>
				<treenode node="generateGenerateMethod;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\PhpGeneratorDumper.php;f12;108;5;122;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates PHP code representing the `generate` method that implements the UrlGeneratorInterface.&#xA;&#xA;Return:&#xA;   PHP code;;d4,109;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpMatcherDumper;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f0;25;1;408;;;;vpos;;vMatcherDumper;;c;;r&#xA;Description&#xA;     PhpMatcherDumper creates a PHP class able to match URLs for a given set of routes.;;d0,26;;b0,0;;m">
				<treenode node="addExpressionLanguageProvider;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f11;86;5;89;;;;vpos;;v;;r;;d4,87;;b1,0;;mprovider;;p">
					<treenode node="provider;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f86;86;95;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildPrefixTree;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;383;5;395;;;;vpos;;vDumperPrefixCollection;;r&#xA;Description&#xA;     Organizes the routes into a prefix tree.&#xA;&#xA;Parameters:&#xA;    DumperCollection $collection - A collection of routes;;d4,384;;b3,0;;mDumperCollection $collection;;p">
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f54;383;65;383;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compilePrefixRoutes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;167;5;195;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates PHP code recursively to match a tree of routes.&#xA;&#xA;Parameters:&#xA;    DumperPrefixCollection $collection - A DumperPrefixCollection instance&#xA;    bool $supportsRedirections - Whether redirections are supported by the base class&#xA;    string $parentPrefix - Prefix of the parent collection&#xA;&#xA;Return:&#xA;   PHP code;;d4,168;;b3,0;;mDumperPrefixCollection $collection;;pbool $supportsRedirections;;pstring $parentPrefix;;p">
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f64;167;75;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parentPrefix;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f100;167;113;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="supportsRedirections;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f77;167;98;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;209;5;341;;;;vpos;;vstring;;r&#xA;Description&#xA;     Compiles a single Route to PHP code used to match it against the path info.&#xA;&#xA;Parameters:&#xA;    Route $route - A Route instance&#xA;    string $name - The name of the Route&#xA;    bool $supportsRedirections - Whether redirections are supported by the base class&#xA;    string|null $parentPrefix - The prefix of the parent collection used to optimize the code&#xA;&#xA;Return:&#xA;   PHP code;;d4,210;;b3,0;;mRoute $route;;pstring $name;;pbool $supportsRedirections;;pstring|null $parentPrefix;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f48;209;53;209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parentPrefix;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f78;209;91;209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f40;209;46;209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="supportsRedirections;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f55;209;76;209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compileRoutes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;125;5;156;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates PHP code to match a RouteCollection with all its routes.&#xA;&#xA;Parameters:&#xA;    RouteCollection $routes - A RouteCollection instance&#xA;    bool $supportsRedirections - Whether redirections are supported by the base class&#xA;&#xA;Return:&#xA;   PHP code;;d4,126;;b3,0;;mRouteCollection $routes;;pbool $supportsRedirections;;p">
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f51;125;58;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="supportsRedirections;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f60;125;81;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dump;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f11;46;5;84;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dumps a set of routes to a PHP class.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options&#xA;&#xA;Return:&#xA;   A PHP class representing the matcher class;;d4,47;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f31;46;39;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateMatchMethod;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;98;5;115;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates the code for the match method implementing UrlMatcherInterface.&#xA;&#xA;Parameters:&#xA;    bool $supportsRedirections - Whether redirections are supported by the base class&#xA;&#xA;Return:&#xA;   Match method as PHP code;;d4,99;;b3,0;;mbool $supportsRedirections;;p">
					<treenode node="supportsRedirections;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f41;98;62;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getExpressionLanguage;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;397;5;407;;;;vpos;;v;;r;;d4,398;;b3,0;;m">
				</treenode>
				<treenode node="groupRoutesByHostRegex;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;352;5;371;;;;vpos;;vDumperCollection;;r&#xA;Description&#xA;     Groups consecutive routes having the same host regex.&#xA;&#xA;Parameters:&#xA;    RouteCollection $routes - A flat RouteCollection&#xA;&#xA;Return:&#xA;   A collection with routes grouped by host regex in sub-collections;;d4,353;;b3,0;;mRouteCollection $routes;;p">
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f60;352;67;352;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expressionLanguage;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;27;31;27;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="expressionLanguageProviders;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php;f12;32;40;32;;;;vposExpressionFunctionProviderInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="RedirectableUrlMatcher;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php;f9;21;1;66;;;;vpos;;vUrlMatcher;;cRedirectableUrlMatcherInterface;;c;;r&#xA;Description&#xA;      author Fabien Potencier &lt;fabien symfony.com&gt;;;d0,22;;b0,0;;m">
				<treenode node="handleRouteRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php;f14;50;5;65;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,51;;b2,0;;mpathinfo;;pname;;proute;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php;f58;50;63;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php;f47;50;56;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php;f71;50;77;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php;f11;26;5;45;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,27;;b1,0;;mpathinfo;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php;f26;26;35;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="RequestContext;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f0;25;1;363;;;;vpos;;v;;r&#xA;Description&#xA;     Holds information about the current request.;;d0,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;55;5;65;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    string $baseUrl - The base URL&#xA;    string $method - The HTTP method&#xA;    string $host - The HTTP host name&#xA;    string $scheme - The HTTP scheme&#xA;    int $httpPort - The HTTP port&#xA;    int $httpsPort - The HTTPS port&#xA;    string $path - The path&#xA;    string $queryString - The query string;;d4,56;;b1,0;;mstring $baseUrl;;pstring $method;;pstring $host;;pstring $scheme;;pint $httpPort;;pint $httpsPort;;pstring $path;;pstring $queryString;;p">
					<treenode node="baseUrl;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f32;55;40;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="host;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f64;55;69;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="httpPort;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f103;55;112;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="httpsPort;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f119;55;129;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f47;55;54;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f137;55;142;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryString;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f150;55;162;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scheme;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f85;55;92;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fromRequest;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;74;5;86;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Updates the RequestContext information based on a HttpFoundation Request.&#xA;&#xA;Parameters:&#xA;    Request $request - A Request instance&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,75;;b1,0;;mRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f40;74;48;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBaseUrl;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;93;5;96;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the base URL.&#xA;&#xA;Return:&#xA;   The base URL;;d4,94;;b1,0;;m">
				</treenode>
				<treenode node="getHost;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;173;5;176;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the HTTP host.&#xA;&#xA;Return:&#xA;   The HTTP host;;d4,174;;b1,0;;m">
				</treenode>
				<treenode node="getHttpPort;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;225;5;228;;;;vpos;;vint;;r&#xA;Description&#xA;     Gets the HTTP port.&#xA;&#xA;Return:&#xA;   The HTTP port;;d4,226;;b1,0;;m">
				</treenode>
				<treenode node="getHttpsPort;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;251;5;254;;;;vpos;;vint;;r&#xA;Description&#xA;     Gets the HTTPS port.&#xA;&#xA;Return:&#xA;   The HTTPS port;;d4,252;;b1,0;;m">
				</treenode>
				<treenode node="getMethod;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;145;5;148;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the HTTP method.&#xA;&#xA;Return:&#xA;   The HTTP method;;d4,146;;b1,0;;m">
				</treenode>
				<treenode node="getParameter;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;330;5;333;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets a parameter value.&#xA;&#xA;Parameters:&#xA;    string $name - A parameter name&#xA;&#xA;Return:&#xA;   The parameter value or null if nonexistent;;d4,331;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f33;330;38;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getParameters;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;304;5;307;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the parameters.&#xA;&#xA;Return:&#xA;   The parameters;;d4,305;;b1,0;;m">
				</treenode>
				<treenode node="getPathInfo;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;119;5;122;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the path info.&#xA;&#xA;Return:&#xA;   The path info;;d4,120;;b1,0;;m">
				</treenode>
				<treenode node="getQueryString;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;277;5;280;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the query string.&#xA;&#xA;Return:&#xA;   The query string without the &quot;?&quot;;;d4,278;;b1,0;;m">
				</treenode>
				<treenode node="getScheme;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;199;5;202;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the HTTP scheme.&#xA;&#xA;Return:&#xA;   The HTTP scheme;;d4,200;;b1,0;;m">
				</treenode>
				<treenode node="hasParameter;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;342;5;345;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a parameter value is set for the given parameter.&#xA;&#xA;Parameters:&#xA;    string $name - A parameter name&#xA;&#xA;Return:&#xA;   True if the parameter value is set, false otherwise;;d4,343;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f33;342;38;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setBaseUrl;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;107;5;112;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the base URL.&#xA;&#xA;Parameters:&#xA;    string $baseUrl - The base URL&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,108;;b1,0;;mstring $baseUrl;;p">
					<treenode node="baseUrl;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f31;107;39;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHost;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;187;5;192;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the HTTP host.&#xA;&#xA;Parameters:&#xA;    string $host - The HTTP host&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,188;;b1,0;;mstring $host;;p">
					<treenode node="host;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f28;187;33;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHttpPort;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;239;5;244;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the HTTP port.&#xA;&#xA;Parameters:&#xA;    int $httpPort - The HTTP port&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,240;;b1,0;;mint $httpPort;;p">
					<treenode node="httpPort;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f32;239;41;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHttpsPort;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;265;5;270;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the HTTPS port.&#xA;&#xA;Parameters:&#xA;    int $httpsPort - The HTTPS port&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,266;;b1,0;;mint $httpsPort;;p">
					<treenode node="httpsPort;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f33;265;43;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMethod;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;159;5;164;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the HTTP method.&#xA;&#xA;Parameters:&#xA;    string $method - The HTTP method&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,160;;b1,0;;mstring $method;;p">
					<treenode node="method;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f30;159;37;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setParameter;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;357;5;362;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets a parameter value.&#xA;&#xA;Parameters:&#xA;    string $name - A parameter name&#xA;    mixed $parameter - The parameter value&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,358;;b1,0;;mstring $name;;pmixed $parameter;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f33;357;38;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameter;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f40;357;50;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setParameters;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;316;5;321;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the parameters.&#xA;&#xA;Parameters:&#xA;    array $parameters - The parameters&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,317;;b1,0;;marray $parameters;;p">
					<treenode node="parameters;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f40;316;51;316;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPathInfo;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;131;5;136;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the path info.&#xA;&#xA;Parameters:&#xA;    string $pathInfo - The path info&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,132;;b1,0;;mstring $pathInfo;;p">
					<treenode node="pathInfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f32;131;41;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setQueryString;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;291;5;297;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the query string.&#xA;&#xA;Parameters:&#xA;    string $queryString - The query string (after &quot;?&quot;)&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,292;;b1,0;;mstring $queryString;;p">
					<treenode node="queryString;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f35;291;47;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setScheme;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f11;213;5;218;;;;vpos;;vRequestContext;;r&#xA;Description&#xA;     Sets the HTTP scheme.&#xA;&#xA;Parameters:&#xA;    string $scheme - The HTTP scheme&#xA;&#xA;Return:&#xA;   The current instance, implementing a fluent interface;;d4,214;;b1,0;;mstring $scheme;;p">
					<treenode node="scheme;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f30;213;37;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="baseUrl;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;27;20;27;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="host;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;30;17;30;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="httpPort;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;32;21;32;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="httpsPort;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;33;22;33;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="method;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;29;19;29;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="parameters;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;39;23;39;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="pathInfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;28;21;28;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="queryString;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;34;24;34;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="scheme;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php;f12;31;19;31;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="ResourceNotFoundException;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\ResourceNotFoundException.php;f0;22;39;22;;;;vpos;;v;;r&#xA;Description&#xA;     The resource was not found.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Route;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f0;21;1;181;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f0;21;22;21;;;;vpos;;v;;r&#xA;Description&#xA;     Annotation class for Route().;;d0,22;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;40;5;54;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    array $data - An array of key/value parameters;;d4,41;;b1,0;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f38;40;43;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCondition;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;177;5;180;;;;vpos;;v;;r;;d4,178;;b1,0;;m">
				</treenode>
				<treenode node="getDefaults;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;147;5;150;;;;vpos;;v;;r;;d4,148;;b1,0;;m">
				</treenode>
				<treenode node="getHost;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;91;5;94;;;;vpos;;v;;r;;d4,92;;b1,0;;m">
				</treenode>
				<treenode node="getMethods;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;167;5;170;;;;vpos;;v;;r;;d4,168;;b1,0;;m">
				</treenode>
				<treenode node="getName;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;101;5;104;;;;vpos;;v;;r;;d4,102;;b1,0;;m">
				</treenode>
				<treenode node="getOptions;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;137;5;140;;;;vpos;;v;;r;;d4,138;;b1,0;;m">
				</treenode>
				<treenode node="getPath;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;81;5;84;;;;vpos;;v;;r;;d4,82;;b1,0;;m">
				</treenode>
				<treenode node="getPattern;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;69;5;74;;;;vpos;;v;;r&#xA;Description&#xA;      deprecated since version 2.2, to be removed in 3.0. Use getPath instead.;;d4,70;;b1,0;;m">
				</treenode>
				<treenode node="getRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;127;5;130;;;;vpos;;v;;r;;d4,128;;b1,0;;m">
				</treenode>
				<treenode node="getSchemes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;157;5;160;;;;vpos;;v;;r;;d4,158;;b1,0;;m">
				</treenode>
				<treenode node="setCondition;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;172;5;175;;;;vpos;;v;;r;;d4,173;;b1,0;;mcondition;;p">
					<treenode node="condition;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f33;172;43;172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setDefaults;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;142;5;145;;;;vpos;;v;;r;;d4,143;;b1,0;;mdefaults;;p">
					<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f32;142;41;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHost;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;86;5;89;;;;vpos;;v;;r;;d4,87;;b1,0;;mpattern;;p">
					<treenode node="pattern;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f28;86;36;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMethods;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;162;5;165;;;;vpos;;v;;r;;d4,163;;b1,0;;mmethods;;p">
					<treenode node="methods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f31;162;39;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setName;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;96;5;99;;;;vpos;;v;;r;;d4,97;;b1,0;;mname;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f28;96;33;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setOptions;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;132;5;135;;;;vpos;;v;;r;;d4,133;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f31;132;39;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPath;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;76;5;79;;;;vpos;;v;;r;;d4,77;;b1,0;;mpath;;p">
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f28;76;33;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPattern;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;59;5;64;;;;vpos;;v;;r&#xA;Description&#xA;      deprecated since version 2.2, to be removed in 3.0. Use setPath instead.;;d4,60;;b1,0;;mpattern;;p">
					<treenode node="pattern;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f31;59;39;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;106;5;125;;;;vpos;;v;;r;;d4,107;;b1,0;;mrequirements;;p">
					<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f36;106;49;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setSchemes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f11;152;5;155;;;;vpos;;v;;r;;d4,153;;b1,0;;mschemes;;p">
					<treenode node="schemes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f31;152;39;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="condition;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;31;22;31;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;27;21;27;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="host;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;28;17;28;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="methods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;29;20;29;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;24;17;24;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;26;20;26;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;23;17;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;25;25;25;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="schemes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php;f12;30;20;30;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="RouteCollection;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f0;27;32;27;;;;vpos;;v;;r&#xA;Description&#xA;     A RouteCollection represents a set of Route instances.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="RouteCompiler;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f0;19;1;228;;;;vpos;;vRouteCompilerInterface;;c;;r&#xA;Description&#xA;     RouteCompiler compiles Route instances to CompiledRoute instances.;;d0,20;;b0,0;;m">
				<treenode node="REGEX_DELIMITER;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f9;21;25;21;;;;vpos;;v;;r'#';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="SEPARATORS;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f9;28;20;28;;;;vpos;;v;;r&#xA;Description&#xA;     This string defines the characters that are automatically considered separators in front of optional placeholders (with default and no static text following). Such a single separator can be left out together with the optional placeholder from matching and generating URLs.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="compile;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f18;37;5;76;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,38;;b1,5;;mroute;;p">
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f41;37;47;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compilePattern;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f19;78;5;169;;;;vpos;;v;;r;;d4,79;;b3,5;;mroute;;ppattern;;pisHost;;p">
					<treenode node="isHost;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f67;78;74;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pattern;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f57;78;65;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f49;78;55;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="computeRegexp;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f19;199;5;227;;;;vpos;;vstring;;r&#xA;Description&#xA;     Computes the regexp used to match a specific token. It can be static text or a subpattern.&#xA;&#xA;Parameters:&#xA;    array $tokens - The route tokens&#xA;    int $index - The index of the current token&#xA;    int $firstOptional - The index of the first optional token&#xA;&#xA;Return:&#xA;   The regexp pattern for a single token;;d4,200;;b3,5;;marray $tokens;;pint $index;;pint $firstOptional;;p">
					<treenode node="firstOptional;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f65;199;79;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="index;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f57;199;63;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tokens;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f48;199;55;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findNextSeparator;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f19;178;5;188;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the next static character in the Route pattern that will serve as a separator.&#xA;&#xA;Parameters:&#xA;    string $pattern - The route pattern&#xA;&#xA;Return:&#xA;   The next static character that functions as separator (or empty string when none available);;d4,179;;b3,5;;mstring $pattern;;p">
					<treenode node="pattern;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php;f46;178;54;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="RouteNotFoundException;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\RouteNotFoundException.php;f0;20;36;20;;;;vpos;;v;;r&#xA;Description&#xA;     Exception thrown when a route does not exist.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Router;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f0;33;1;389;;;;vpos;;vRouterInterface;;cRequestMatcherInterface;;c;;r&#xA;Description&#xA;     The Router class is an example of the integration of all pieces of the routing system for easier use.;;d0,34;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;94;5;101;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    LoaderInterface $loader - A LoaderInterface instance&#xA;    mixed $resource - The main resource to load&#xA;    array $options - An array of options&#xA;    RequestContext $context - The context&#xA;    LoggerInterface $logger - A logger instance;;d4,95;;b1,0;;mLoaderInterface $loader;;pmixed $resource;;parray $options;;pRequestContext $context;;pLoggerInterface $logger;;p">
					<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f109;94;117;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="loader;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f48;94;55;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="logger;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f142;94;149;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f74;94;82;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f57;94;66;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addExpressionLanguageProvider;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;350;5;353;;;;vpos;;v;;r;;d4,351;;b1,0;;mprovider;;p">
					<treenode node="provider;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f86;350;95;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generate;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;231;5;234;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,232;;b1,0;;mname;;pparameters;;preferenceType;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f29;231;34;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f36;231;47;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="referenceType;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f59;231;73;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConfigCacheFactory;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f12;381;5;388;;;;vpos;;vConfigCacheFactoryInterface;;r&#xA;Description&#xA;     Provides the ConfigCache factory implementation, falling back to a default implementation if necessary.&#xA;&#xA;Return:&#xA;   $configCacheFactory;;d4,382;;b3,0;;m">
				</treenode>
				<treenode node="getContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;213;5;216;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,214;;b1,0;;m">
				</treenode>
				<treenode node="getGenerator;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;313;5;348;;;;vpos;;vUrlGeneratorInterface;;r&#xA;Description&#xA;     Gets the UrlGenerator instance associated with this Router.&#xA;&#xA;Return:&#xA;   A UrlGeneratorInterface instance;;d4,314;;b1,0;;m">
				</treenode>
				<treenode node="getGeneratorDumperInstance;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;360;5;363;;;;vpos;;vGeneratorDumperInterface;;r&#xA;Description&#xA;     This method is public because it needs to be callable from a closure in PHP 5.3. It should be converted back to protected in 3.0.;;d4,361;;b1,0;;m">
				</treenode>
				<treenode node="getMatcher;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;263;5;306;;;;vpos;;vUrlMatcherInterface;;r&#xA;Description&#xA;     Gets the UrlMatcher instance associated with this Router.&#xA;&#xA;Return:&#xA;   A UrlMatcherInterface instance;;d4,264;;b1,0;;m">
				</treenode>
				<treenode node="getMatcherDumperInstance;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;370;5;373;;;;vpos;;vMatcherDumperInterface;;r&#xA;Description&#xA;     This method is public because it needs to be callable from a closure in PHP 5.3. It should be converted back to protected in 3.0.;;d4,371;;b1,0;;m">
				</treenode>
				<treenode node="getOption;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;174;5;181;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets an option value.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;&#xA;Return:&#xA;   The value;;d4,175;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f30;174;34;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRouteCollection;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;186;5;193;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,187;;b1,0;;m">
				</treenode>
				<treenode node="match;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;239;5;242;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,240;;b1,0;;mpathinfo;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f26;239;35;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchRequest;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;247;5;256;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,248;;b1,0;;mrequest;;p">
					<treenode node="request;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f41;247;49;247;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConfigCacheFactory;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;223;5;226;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the ConfigCache factory to use.&#xA;&#xA;Parameters:&#xA;    ConfigCacheFactoryInterface $configCacheFactory - The factory to use;;d4,224;;b1,0;;mConfigCacheFactoryInterface $configCacheFactory;;p">
					<treenode node="configCacheFactory;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f70;223;89;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;198;5;208;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,199;;b1,0;;mcontext;;p">
					<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f46;198;54;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setOption;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;156;5;163;;;;vpos;;v;;r&#xA;Description&#xA;     Sets an option.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;    mixed $value - The value;;d4,157;;b1,0;;mstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f30;156;34;156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f36;156;42;156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setOptions;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f11;116;5;146;;;;vpos;;v;;r&#xA;Description&#xA;     Sets options.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options;;d4,117;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f37;116;45;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;58;25;58;;;;vposRouteCollection;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="configCacheFactory;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f12;78;31;78;;;;vposConfigCacheFactoryInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;48;22;48;;;;vposRequestContext;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="expressionLanguageProviders;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f12;83;40;83;;;;vposExpressionFunctionProviderInterface;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="generator;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;43;24;43;;;;vposUrlGeneratorInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="loader;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;53;21;53;;;;vposLoaderInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="logger;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;73;21;73;;;;vposLoggerInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="matcher;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;38;22;38;;;;vposUrlMatcherInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;68;22;68;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php;f14;63;23;63;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TraceableUrlMatcher;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f0;22;1;130;;;;vpos;;vUrlMatcher;;c;;r&#xA;Description&#xA;     TraceableUrlMatcher helps debug path info matching by tracing the match.;;d0,23;;b0,0;;m">
				<treenode node="ROUTE_ALMOST_MATCHES;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f9;25;30;25;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="ROUTE_DOES_NOT_MATCH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f9;24;30;24;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="ROUTE_MATCHES;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f9;26;23;26;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="addTrace;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f12;121;5;129;;;;vpos;;v;;r;;d4,122;;b3,0;;mlog;;plevel;;pname;;proute;;p">
					<treenode node="level;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f36;121;42;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="log;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f30;121;34;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f73;121;78;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f87;121;93;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getTraces;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f11;30;5;40;;;;vpos;;v;;r;;d4,31;;b1,0;;mpathinfo;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f30;30;39;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchCollection;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f14;42;5;119;;;;vpos;;v;;r;;d4,43;;b2,0;;mpathinfo;;proutes;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f39;42;48;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f66;42;73;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="traces;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php;f14;28;21;28;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="UrlGenerator;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f0;29;1;339;;;;vpos;;vUrlGeneratorInterface;;cConfigurableRequirementsInterface;;c;;r&#xA;Description&#xA;     UrlGenerator can generate a URL or a path for any route in the RouteCollection based on the passed parameters.;;d0,30;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f11;88;5;93;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    RouteCollection $routes - A RouteCollection instance&#xA;    RequestContext $context - The context&#xA;    LoggerInterface|null $logger - A logger instance;;d4,89;;b1,0;;mRouteCollection $routes;;pRequestContext $context;;pLoggerInterface|null $logger;;p">
					<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f72;88;80;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="logger;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f98;88;105;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f48;88;55;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="doGenerate;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f14;147;5;287;;;;vpos;;v;;r&#xA;Description&#xA;      throws MissingMandatoryParametersException When some parameters are missing that are mandatory for the route;;d4,148;;b2,0;;mvariables;;pdefaults;;prequirements;;ptokens;;pparameters;;pname;;preferenceType;;phostTokens;;prequiredSchemes;;p">
					<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f46;147;55;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hostTokens;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f117;147;128;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f94;147;99;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f81;147;92;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="referenceType;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f101;147;115;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="requiredSchemes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f136;147;152;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f57;147;70;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tokens;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f72;147;79;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="variables;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f34;147;44;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generate;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f11;130;5;140;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,131;;b1,0;;mname;;pparameters;;preferenceType;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f29;130;34;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parameters;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f36;130;47;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="referenceType;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f59;130;73;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f11;106;5;109;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,107;;b1,0;;m">
				</treenode>
				<treenode node="getRelativePath;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f18;309;5;338;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the target path as relative reference from the base path.&#xA;&#xA;Parameters:&#xA;    string $basePath - The base path&#xA;    string $targetPath - The target path&#xA;&#xA;Return:&#xA;   The relative target path;;d4,310;;b1,5;;mstring $basePath;;pstring $targetPath;;p">
					<treenode node="basePath;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f43;309;52;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="targetPath;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f54;309;65;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isStrictRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f11;122;5;125;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,123;;b1,0;;m">
				</treenode>
				<treenode node="setContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f11;98;5;101;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,99;;b1,0;;mcontext;;p">
					<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f46;98;54;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setStrictRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f11;114;5;117;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,115;;b1,0;;menabled;;p">
					<treenode node="enabled;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f42;114;50;114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f14;39;22;39;;;;vposRequestContext;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="decodedChars;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f14;59;27;59;;;;vpos;;v;;r&#xA;Description&#xA;     This array defines the characters (besides alphanumeric ones) that will not be percent-encoded in the path segment of the generated URL.;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="logger;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f14;49;21;49;;;;vposLoggerInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f14;34;21;34;;;;vposRouteCollection;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="strictRequirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php;f14;44;33;44;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="UrlMatcher;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f0;29;1;254;;;;vpos;;vUrlMatcherInterface;;cRequestMatcherInterface;;c;;r&#xA;Description&#xA;     UrlMatcher matches URL based on a set of routes.;;d0,30;;b0,0;;m">
				<treenode node="REQUIREMENT_MATCH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f9;31;27;31;;;;vpos;;v;;r0;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="REQUIREMENT_MISMATCH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f9;32;30;32;;;;vpos;;v;;r1;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="ROUTE_MATCH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f9;33;21;33;;;;vpos;;v;;r2;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f11;66;5;70;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    RouteCollection $routes - A RouteCollection instance&#xA;    RequestContext $context - The context;;d4,67;;b1,0;;mRouteCollection $routes;;pRequestContext $context;;p">
					<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f72;66;80;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f48;66;55;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addExpressionLanguageProvider;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f11;118;5;121;;;;vpos;;v;;r;;d4,119;;b1,0;;mprovider;;p">
					<treenode node="provider;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f86;118;95;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAttributes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;194;5;199;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of values to use as request attributes.&#xA;&#xA;Parameters:&#xA;    Route $route - The route we are matching against&#xA;    string $name - The name of the route&#xA;    array $attributes - An array of attributes from the matcher&#xA;&#xA;Return:&#xA;   An array of parameters;;d4,195;;b2,0;;mRoute $route;;pstring $name;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f64;194;75;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f51;194;56;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f43;194;49;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f11;83;5;86;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,84;;b1,0;;m">
				</treenode>
				<treenode node="getExpressionLanguage;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;243;5;253;;;;vpos;;v;;r;;d4,244;;b2,0;;m">
				</treenode>
				<treenode node="handleRouteRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;210;5;222;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles specific route requirements.&#xA;&#xA;Parameters:&#xA;    string $pathinfo - The path&#xA;    string $name - The route name&#xA;    Route $route - The route&#xA;&#xA;Return:&#xA;   The first element represents the status, the second contains additional information;;d4,211;;b2,0;;mstring $pathinfo;;pstring $name;;pRoute $route;;p">
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f58;210;63;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f47;210;56;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f71;210;77;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f11;91;5;102;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,92;;b1,0;;mpathinfo;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f26;91;35;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchCollection;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;134;5;179;;;;vpos;;varray;;r&#xA;Description&#xA;     Tries to match a URL with a set of routes.&#xA;&#xA;Parameters:&#xA;    string $pathinfo - The path info to be parsed&#xA;    RouteCollection $routes - The set of routes&#xA;&#xA;Return:&#xA;   An array of parameters;;d4,135;;b2,0;;mstring $pathinfo;;pRouteCollection $routes;;p">
					<treenode node="pathinfo;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f39;134;48;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f66;134;73;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matchRequest;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f11;107;5;116;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,108;;b1,0;;mrequest;;p">
					<treenode node="request;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f41;107;49;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeDefaults;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;232;5;241;;;;vpos;;varray;;r&#xA;Description&#xA;     Get merged default parameters.&#xA;&#xA;Parameters:&#xA;    array $params - The parameters&#xA;    array $defaults - The defaults&#xA;&#xA;Return:&#xA;   Merged default parameters;;d4,233;;b2,0;;marray $params;;parray $defaults;;p">
					<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f46;232;55;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f37;232;44;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setContext;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f11;75;5;78;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,76;;b1,0;;mcontext;;p">
					<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f46;75;54;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="allow;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;43;20;43;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;38;22;38;;;;vposRequestContext;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="expressionLanguage;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;51;33;51;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="expressionLanguageProviders;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;56;42;56;;;;vposExpressionFunctionProviderInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;50;22;50;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php;f14;48;21;48;;;;vposRouteCollection;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="XmlFileLoader;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f0;27;1;275;;;;vpos;;vFileLoader;;c;;r&#xA;Description&#xA;     XmlFileLoader loads XML routing files.;;d0,28;;b0,0;;m">
				<treenode node="NAMESPACE_URI;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f9;29;23;29;;;;vpos;;v;;r'http://symfony.com/schema/routing';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="SCHEME_PATH;PHP:PHP Word;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f9;30;21;30;;;;vpos;;v;;r'/schema/routing/routing-1.0.xsd';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="isElementValueNull;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f12;265;5;274;;;;vpos;;v;;r;;d4,266;;b3,0;;melement;;p">
					<treenode node="element;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f52;265;60;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f11;45;5;64;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Loads an XML file.&#xA;&#xA;Parameters:&#xA;    string $file - An XML file path&#xA;    string|null $type - The resource type&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d4,46;;b1,0;;mstring $file;;pstring|null $type;;p">
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f25;45;30;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f32;45;37;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadFile;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f14;216;5;219;;;;vpos;;v;;r&#xA;Description&#xA;     Loads an XML file.&#xA;&#xA;Parameters:&#xA;    string $file - An XML file path;;d4,217;;b2,0;;mstring $file;;p">
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f32;216;37;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseConfigs;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f12;231;5;263;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses the config elements (default, requirement, option).&#xA;&#xA;Parameters:&#xA;    \DOMElement $node - Element to parse that contains the configs&#xA;    string $path - Full path of the XML file being processed&#xA;&#xA;Return:&#xA;   An array with the defaults as first item, requirements as second and options as third;;d4,232;;b3,0;;m\DOMElement $node;;pstring $path;;p">
					<treenode node="node;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f46;231;51;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f53;231;58;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseImport;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f14;167;5;203;;;;vpos;;v;;r&#xA;Description&#xA;     Parses an import and adds the routes in the resource to the RouteCollection.&#xA;&#xA;Parameters:&#xA;    RouteCollection $collection - RouteCollection instance&#xA;    \DOMElement $node - Element to parse that represents a Route&#xA;    string $path - Full path of the XML file being processed&#xA;    string $file - Loaded file name;;d4,168;;b2,0;;mRouteCollection $collection;;p\DOMElement $node;;pstring $path;;pstring $file;;p">
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f51;167;62;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f90;167;95;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="node;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f76;167;81;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f83;167;88;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseNode;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f14;76;5;92;;;;vpos;;v;;r&#xA;Description&#xA;     Parses a node from a loaded XML file.&#xA;&#xA;Parameters:&#xA;    RouteCollection $collection - Collection to associate with the node&#xA;    \DOMElement $node - Element to parse&#xA;    string $path - Full path of the XML file being processed&#xA;    string $file - Loaded file name;;d4,77;;b2,0;;mRouteCollection $collection;;p\DOMElement $node;;pstring $path;;pstring $file;;p">
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f49;76;60;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f88;76;93;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="node;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f74;76;79;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f81;76;86;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f14;113;5;155;;;;vpos;;v;;r&#xA;Description&#xA;     Parses a route and adds it to the RouteCollection.&#xA;&#xA;Parameters:&#xA;    RouteCollection $collection - RouteCollection instance&#xA;    \DOMElement $node - Element to parse that represents a Route&#xA;    string $path - Full path of the XML file being processed;;d4,114;;b2,0;;mRouteCollection $collection;;p\DOMElement $node;;pstring $path;;p">
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f50;113;61;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="node;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f75;113;80;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f82;113;87;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="supports;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f11;99;5;102;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,100;;b1,0;;mresource;;ptype;;p">
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f29;99;38;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php;f40;99;45;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="YamlFileLoader;PHP:Class Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f0;27;1;236;;;;vpos;;vFileLoader;;c;;r&#xA;Description&#xA;     YamlFileLoader loads Yaml routing files.;;d0,28;;b0,0;;m">
				<treenode node="load;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f11;46;5;99;;;;vpos;;vRouteCollection;;r&#xA;Description&#xA;     Loads a Yaml file.&#xA;&#xA;Parameters:&#xA;    string $file - A Yaml file path&#xA;    string|null $type - The resource type&#xA;&#xA;Return:&#xA;   A RouteCollection instance;;d4,47;;b1,0;;mstring $file;;pstring|null $type;;p">
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f25;46;30;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f32;46;37;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseImport;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f14;160;5;194;;;;vpos;;v;;r&#xA;Description&#xA;     Parses an import and adds the routes in the resource to the RouteCollection.&#xA;&#xA;Parameters:&#xA;    RouteCollection $collection - A RouteCollection instance&#xA;    array $config - Route definition&#xA;    string $path - Full path of the YAML file being processed&#xA;    string $file - Loaded file name;;d4,161;;b2,0;;mRouteCollection $collection;;parray $config;;pstring $path;;pstring $file;;p">
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f51;160;62;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="config;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f70;160;77;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f86;160;91;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f79;160;84;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseRoute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f14;119;5;150;;;;vpos;;v;;r&#xA;Description&#xA;     Parses a route and adds it to the RouteCollection.&#xA;&#xA;Parameters:&#xA;    RouteCollection $collection - A RouteCollection instance&#xA;    string $name - Route name&#xA;    array $config - Route definition&#xA;    string $path - Full path of the YAML file being processed;;d4,120;;b2,0;;mRouteCollection $collection;;pstring $name;;parray $config;;pstring $path;;p">
					<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f50;119;61;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="config;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f76;119;83;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f63;119;68;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f85;119;90;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="supports;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f11;106;5;109;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,107;;b1,0;;mresource;;ptype;;p">
					<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f29;106;38;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f40;106;45;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validate;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f14;206;5;235;;;;vpos;;v;;r&#xA;Description&#xA;     Validates the route configuration.&#xA;&#xA;Parameters:&#xA;    array $config - A resource config&#xA;    string $name - The config key&#xA;    string $path - The loaded file path;;d4,207;;b2,0;;marray $config;;pstring $name;;pstring $path;;p">
					<treenode node="config;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f32;206;39;206;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f41;206;46;206;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f48;206;53;206;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="availableKeys;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f19;29;33;29;;;;vpos;;v;;r;;d-1,-1;;b3,5;;m">
				</treenode>
				<treenode node="yamlParser;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php;f12;32;23;32;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
			</treenode>
			<treenode node="__clone;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;39;5;44;;;;vpos;;v;;r;;d4,40;;b1,0;;m">
			</treenode>
			<treenode node="__construct;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f11;29;5;34;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;86;5;102;;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;41;5;51;;;;vpos;;v;;r;;d4,30;;b1,0;;mallowedMethods;;pmessage;;pcode;;pprevious;;p">
				<treenode node="allowedMethods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f38;29;53;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="code;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f72;29;77;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="condition;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f175;86;185;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f45;86;54;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="host;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f123;86;128;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="hostRegex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f92;41;102;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="hostTokens;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f117;41;128;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="hostVariables;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f146;41;160;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="message;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f55;29;63;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="methods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f155;86;163;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f103;86;111;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f32;86;37;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="pathVariables;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f76;41;90;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="previous;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f94;29;103;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="regex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f47;41;53;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f72;86;85;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="schemes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f135;86;143;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="staticPrefix;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f32;41;45;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="tokens;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f61;41;68;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="variables;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f178;41;188;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="add;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;50;5;56;;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;78;5;83;;;;vpos;;v;;r&#xA;Description&#xA;     Adds a route or collection.&#xA;&#xA;Parameters:&#xA;    DumperRoute|DumperCollection - The route or collection;;d4,51;;b1,0;;mDumperRoute|DumperCollection;;p">
				<treenode node="child;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f24;50;30;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f24;78;29;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="route;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f37;78;43;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addCollection;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;127;5;137;;;;vpos;;v;;r&#xA;Description&#xA;     Adds a route collection at the end of the current set by appending all routes of the added collection.&#xA;&#xA;Parameters:&#xA;    RouteCollection $collection - A RouteCollection instance;;d4,128;;b1,0;;mRouteCollection $collection;;p">
				<treenode node="collection;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f50;127;61;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addDefaults;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;200;5;207;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;444;5;452;;;;vpos;;v;;r&#xA;Description&#xA;     Adds defaults to all routes.&#xA;&#xA;Parameters:&#xA;    array $defaults - An array of default values;;d4,201;;b1,0;;marray $defaults;;p">
				<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f38;200;47;200;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f38;444;47;444;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addOptions;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;232;5;239;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;355;5;363;;;;vpos;;v;;r&#xA;Description&#xA;     Adds options to all routes.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options;;d4,233;;b1,0;;marray $options;;p">
				<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f37;232;45;232;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f37;355;45;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addPrefix;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;148;5;161;;;;vpos;;v;;r&#xA;Description&#xA;     Adds a prefix to the path of all child routes.&#xA;&#xA;Parameters:&#xA;    string $prefix - An optional prefix to add before each pattern of the route collection&#xA;    array $defaults - An array of default values&#xA;    array $requirements - An array of requirements;;d4,149;;b1,0;;mstring $prefix;;parray $defaults;;parray $requirements;;p">
				<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f45;148;54;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="prefix;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f30;148;37;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f72;148;85;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;216;5;223;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;531;5;539;;;;vpos;;v;;r&#xA;Description&#xA;     Adds requirements to all routes.&#xA;&#xA;Parameters:&#xA;    array $requirements - An array of requirements;;d4,217;;b1,0;;marray $requirements;;p">
				<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f42;216;55;216;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f42;531;55;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addResource;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;280;5;283;;;;vpos;;v;;r&#xA;Description&#xA;     Adds a resource for this collection.&#xA;&#xA;Parameters:&#xA;    ResourceInterface $resource - A resource instance;;d4,281;;b1,0;;mResourceInterface $resource;;p">
				<treenode node="resource;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f50;280;59;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="all;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;40;5;43;;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;90;5;93;;;;vpos;;v;;r&#xA;Description&#xA;     Returns the children routes and collections.;;d4,41;;b1,0;;m">
			</treenode>
			<treenode node="compile;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;626;5;635;;;;vpos;;vCompiledRoute;;r&#xA;Description&#xA;     Compiles the route.&#xA;&#xA;Return:&#xA;   A CompiledRoute instance;;d4,627;;b1,0;;m">
			</treenode>
			<treenode node="count;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;65;5;68;;;;vpos;;vint;;r&#xA;Description&#xA;     Gets the number of Routes in this collection.&#xA;&#xA;Return:&#xA;   The number of routes;;d4,66;;b1,0;;m">
			</treenode>
			<treenode node="get;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;102;5;105;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Gets a route by name.&#xA;&#xA;Parameters:&#xA;    string $name - The route name&#xA;&#xA;Return:&#xA;   |null A Route instance or null when not found;;d4,103;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f24;102;29;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getAllowedMethods;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f11;41;5;44;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the allowed HTTP methods.;;d4,42;;b1,0;;m">
			</treenode>
			<treenode node="getAttribute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;133;5;136;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns an attribute by name.&#xA;&#xA;Parameters:&#xA;    string $name - The attribute name&#xA;    mixed $default - Default value is the attribute doesn't exist&#xA;&#xA;Return:&#xA;   The attribute value;;d4,134;;b1,0;;mstring $name;;pmixed $default;;p">
				<treenode node="default;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f40;133;48;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f33;133;38;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getCondition;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;594;5;597;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the condition.&#xA;&#xA;Return:&#xA;   The condition;;d4,595;;b1,0;;m">
			</treenode>
			<treenode node="getDefault;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;461;5;464;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets a default value.&#xA;&#xA;Parameters:&#xA;    string $name - A variable name&#xA;&#xA;Return:&#xA;   The default value or null when not given;;d4,462;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f31;461;36;461;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getDefaults;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;414;5;417;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the defaults.&#xA;&#xA;Return:&#xA;   The defaults;;d4,415;;b1,0;;m">
			</treenode>
			<treenode node="getHost;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;210;5;213;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the pattern for the host.&#xA;&#xA;Return:&#xA;   The host pattern;;d4,211;;b1,0;;m">
			</treenode>
			<treenode node="getHostRegex;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;111;5;114;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the host regex.&#xA;&#xA;Return:&#xA;   |null The host regex or null;;d4,112;;b1,0;;m">
			</treenode>
			<treenode node="getHostTokens;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;131;5;134;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the host tokens.&#xA;&#xA;Return:&#xA;   The tokens;;d4,132;;b1,0;;m">
			</treenode>
			<treenode node="getHostVariables;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;161;5;164;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the host variables.&#xA;&#xA;Return:&#xA;   The variables;;d4,162;;b1,0;;m">
			</treenode>
			<treenode node="getIterator;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;78;5;81;;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;55;5;58;;;;vpos;;v;;r&#xA;Description&#xA;     Returns an iterator over the children.;;d4,79;;b1,0;;m">
			</treenode>
			<treenode node="getMethods;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;287;5;290;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the uppercased HTTP methods this route is restricted to. So an empty array means that any method is allowed.&#xA;&#xA;Return:&#xA;   The methods;;d4,288;;b1,0;;m">
			</treenode>
			<treenode node="getOption;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;392;5;395;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get an option value.&#xA;&#xA;Parameters:&#xA;    string $name - An option name&#xA;&#xA;Return:&#xA;   The option value or null when not given;;d4,393;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f30;392;35;392;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getOptions;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;323;5;326;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the options.&#xA;&#xA;Return:&#xA;   The options;;d4,324;;b1,0;;m">
			</treenode>
			<treenode node="getParent;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f14;98;5;101;;;;vpos;;vDumperCollection;;r&#xA;Description&#xA;     Returns the parent collection.&#xA;&#xA;Return:&#xA;   |null The parent collection or null if the collection has no parent;;d4,99;;b2,0;;m">
			</treenode>
			<treenode node="getPath;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;181;5;184;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the pattern for the path.&#xA;&#xA;Return:&#xA;   The path pattern;;d4,182;;b1,0;;m">
			</treenode>
			<treenode node="getPathVariables;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;151;5;154;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the path variables.&#xA;&#xA;Return:&#xA;   The variables;;d4,152;;b1,0;;m">
			</treenode>
			<treenode node="getPattern;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;151;5;156;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the pattern for the path.&#xA;&#xA;Return:&#xA;   The pattern;;d4,152;;b1,0;;m">
			</treenode>
			<treenode node="getRegex;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;101;5;104;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the regex.&#xA;&#xA;Return:&#xA;   The regex;;d4,102;;b1,0;;m">
			</treenode>
			<treenode node="getRequirement;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;548;5;557;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the requirement for the given key.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;&#xA;Return:&#xA;   |null The regex or null when not given;;d4,549;;b1,0;;mstring $key;;p">
				<treenode node="key;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f35;548;39;548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;501;5;504;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the requirements.&#xA;&#xA;Return:&#xA;   The requirements;;d4,502;;b1,0;;m">
			</treenode>
			<treenode node="getResources;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;270;5;273;;;;vpos;;vResourceInterface;;r&#xA;Description&#xA;     Returns an array of resources loaded to build this collection.&#xA;&#xA;Return:&#xA;   [] An array of resources;;d4,271;;b1,0;;m">
			</treenode>
			<treenode node="getRoot;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;88;5;91;;;;vpos;;vDumperCollection;;r&#xA;Description&#xA;     Returns the root of the collection.&#xA;&#xA;Return:&#xA;   The root collection;;d4,89;;b1,0;;m">
			</treenode>
			<treenode node="getSchemes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;238;5;241;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the lowercased schemes this route is restricted to. So an empty array means that any scheme is allowed.&#xA;&#xA;Return:&#xA;   The schemes;;d4,239;;b1,0;;m">
			</treenode>
			<treenode node="getStaticPrefix;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;91;5;94;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the static prefix.&#xA;&#xA;Return:&#xA;   The static prefix;;d4,92;;b1,0;;m">
			</treenode>
			<treenode node="getTokens;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;121;5;124;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the tokens.&#xA;&#xA;Return:&#xA;   The tokens;;d4,122;;b1,0;;m">
			</treenode>
			<treenode node="getVariables;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;141;5;144;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the variables.&#xA;&#xA;Return:&#xA;   The variables;;d4,142;;b1,0;;m">
			</treenode>
			<treenode node="hasAttribute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;120;5;123;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the attribute is defined.&#xA;&#xA;Parameters:&#xA;    string $name - The attribute name&#xA;&#xA;Return:&#xA;   true if the attribute is defined, false otherwise;;d4,121;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f33;120;38;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasDefault;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;473;5;476;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a default value is set for the given variable.&#xA;&#xA;Parameters:&#xA;    string $name - A variable name&#xA;&#xA;Return:&#xA;   true if the default value is set, false otherwise;;d4,474;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f31;473;36;473;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasOption;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;404;5;407;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if an option has been set.&#xA;&#xA;Parameters:&#xA;    string $name - An option name&#xA;&#xA;Return:&#xA;   true if the option is set, false otherwise;;d4,405;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f30;404;35;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasRequirement;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;566;5;569;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a requirement is set for the given key.&#xA;&#xA;Parameters:&#xA;    string $key - A variable name&#xA;&#xA;Return:&#xA;   true if a requirement is specified, false otherwise;;d4,567;;b1,0;;mstring $key;;p">
				<treenode node="key;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f35;566;39;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasScheme;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;276;5;279;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a scheme requirement has been set.&#xA;&#xA;Parameters:&#xA;    string $scheme&#xA;&#xA;Return:&#xA;   true if the scheme requirement exists, otherwise false;;d4,277;;b1,0;;mstring $scheme;;p">
				<treenode node="scheme;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f30;276;37;276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="remove;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;112;5;117;;;;vpos;;v;;r&#xA;Description&#xA;     Removes a route or an array of routes by name from the collection.&#xA;&#xA;Parameters:&#xA;    string|array $name - The route name or an array of route names;;d4,113;;b1,0;;mstring|array $name;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f27;112;32;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="sanitizeRequirement;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;637;5;667;;;;vpos;;v;;r;;d4,638;;b3,0;;mkey;;pregex;;p">
				<treenode node="key;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f41;637;45;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="regex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f47;637;53;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="serialize;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;107;5;120;;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;56;5;68;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,108;;b1,0;;m">
			</treenode>
			<treenode node="setAll;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;63;5;71;;;;vpos;;v;;r&#xA;Description&#xA;     Sets children.&#xA;&#xA;Parameters:&#xA;    array $children - The children;;d4,64;;b1,0;;marray $children;;p">
				<treenode node="children;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f33;63;42;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setAttribute;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;144;5;147;;;;vpos;;v;;r&#xA;Description&#xA;     Sets an attribute by name.&#xA;&#xA;Parameters:&#xA;    string $name - The attribute name&#xA;    mixed $value - The attribute value;;d4,145;;b1,0;;mstring $name;;pmixed $value;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f33;144;38;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f40;144;46;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setAttributes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f11;154;5;157;;;;vpos;;v;;r&#xA;Description&#xA;     Sets multiple attributes.&#xA;&#xA;Parameters:&#xA;    array $attributes - The attributes;;d4,155;;b1,0;;marray $attributes;;p">
				<treenode node="attributes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f34;154;45;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setCondition;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;186;5;191;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;608;5;614;;;;vpos;;v;;r&#xA;Description&#xA;     Sets a condition on all routes.&#xA;&#xA;Parameters:&#xA;    string $condition - The condition;;d4,187;;b1,0;;mstring $condition;;p">
				<treenode node="condition;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f33;186;43;186;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f33;608;43;608;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setDefault;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;488;5;494;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets a default value.&#xA;&#xA;Parameters:&#xA;    string $name - A variable name&#xA;    mixed $default - The default value&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,489;;b1,0;;mstring $name;;pmixed $default;;p">
				<treenode node="default;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f38;488;46;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f31;488;36;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setDefaults;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;428;5;433;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets the defaults.&#xA;&#xA;Parameters:&#xA;    array $defaults - The defaults&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,429;;b1,0;;marray $defaults;;p">
				<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f38;428;47;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setHost;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;170;5;177;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;224;5;230;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the host pattern on all routes.&#xA;&#xA;Parameters:&#xA;    string $pattern - The pattern&#xA;    array $defaults - An array of default values&#xA;    array $requirements - An array of requirements;;d4,171;;b1,0;;mstring $pattern;;parray $defaults;;parray $requirements;;p">
				<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f44;170;53;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="pattern;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f28;170;36;170;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f28;224;36;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f71;170;84;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setMethods;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;258;5;263;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;302;5;316;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the HTTP methods (e.g. 'POST') all child routes are restricted to.&#xA;&#xA;Parameters:&#xA;    string|array $methods - The method or an array of methods;;d4,259;;b1,0;;mstring|array $methods;;p">
				<treenode node="methods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f31;258;39;258;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f31;302;39;302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setOption;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;377;5;383;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets an option value.&#xA;&#xA;Parameters:&#xA;    string $name - An option name&#xA;    mixed $value - The option value&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,378;;b1,0;;mstring $name;;pmixed $value;;p">
				<treenode node="name;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f30;377;35;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f37;377;43;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setOptions;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;337;5;344;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets the options.&#xA;&#xA;Parameters:&#xA;    array $options - The options&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,338;;b1,0;;marray $options;;p">
				<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f37;337;45;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setParent;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f14;108;5;111;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the parent collection.&#xA;&#xA;Parameters:&#xA;    DumperCollection $parent - The parent collection;;d4,109;;b2,0;;mDumperCollection $parent;;p">
				<treenode node="parent;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f50;108;57;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setPath;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;195;5;203;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets the pattern for the path.&#xA;&#xA;Parameters:&#xA;    string $pattern - The path pattern&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,196;;b1,0;;mstring $pattern;;p">
				<treenode node="pattern;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f28;195;36;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setPattern;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;169;5;174;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets the pattern for the path.&#xA;&#xA;Parameters:&#xA;    string $pattern - The path pattern&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,170;;b1,0;;mstring $pattern;;p">
				<treenode node="pattern;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f31;169;39;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setRequirement;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;581;5;587;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets a requirement for the given key.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;    string $regex - The regex&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,582;;b1,0;;mstring $key;;pstring $regex;;p">
				<treenode node="key;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f35;581;39;581;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="regex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f41;581;47;581;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setRequirements;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;515;5;520;;;;vpos;;vRoute;;r&#xA;Description&#xA;     Sets the requirements.&#xA;&#xA;Parameters:&#xA;    array $requirements - The requirements&#xA;&#xA;Return:&#xA;   The current Route instance;;d4,516;;b1,0;;marray $requirements;;p">
				<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f42;515;55;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setSchemes;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f11;246;5;251;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;253;5;267;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the schemes (e.g. 'https') all child routes are restricted to.&#xA;&#xA;Parameters:&#xA;    string|array $schemes - The scheme or an array of schemes;;d4,247;;b1,0;;mstring|array $schemes;;p">
				<treenode node="schemes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f31;246;39;246;;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f31;253;39;253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="unserialize;PHP:Function Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f11;125;5;142;;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f11;73;5;84;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritdoc};;d4,126;;b1,0;;mserialized;;p">
				<treenode node="serialized;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f32;125;43;125;;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f32;73;43;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="allowedMethods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php;f14;27;29;27;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="app;PHP:Var Name;C:\AVIDNYAT\silex\web\index.php;f0;4;4;4;;;;vposSilex;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="attributes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f12;33;23;33;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="children;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f12;28;21;28;;;;vpos;;v;;r&#xA;Description&#xA;      (DumperCollection|DumperRoute)[];;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="compiled;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;61;21;61;;;;vposnull;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="condition;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;66;22;66;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="defaults;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;46;21;46;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="host;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;31;17;31;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="hostRegex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;26;22;26;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="hostTokens;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;27;23;27;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="hostVariables;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;25;26;25;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="methods;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;41;20;41;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="options;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;56;20;56;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="parent;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php;f12;23;19;23;;;;vposDumperCollection;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="path;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;26;17;26;;;;vposstring;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="pathVariables;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;24;26;24;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="regex;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;23;18;23;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="requirements;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;51;25;51;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="resources;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f12;37;22;37;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="routes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php;f12;32;19;32;;;;vposRoute;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="schemes;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php;f12;36;20;36;;;;vposarray;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="staticPrefix;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;22;25;22;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="tokens;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;21;19;21;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
			<treenode node="variables;PHP:Var Name;C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php;f12;20;22;20;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
			</treenode>
		</phptree>
		<jstree>
		</jstree>
		<scsstree>
		</scsstree>
		<lesstree>
		</lesstree>
	</codestructure><todoblock>
	</todoblock>
	<filescache>
		<file name="C:\AVIDNYAT\silex\web\index.php" crc="-2143207094"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\PhpMatcherDumper.php" crc="1781729166"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumperInterface.php" crc="-1474238680"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\MatcherDumper.php" crc="2071778623"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperRoute.php" crc="524913753"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperPrefixCollection.php" crc="702865751"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\DumperCollection.php" crc="-356302943"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\Dumper\ApacheMatcherDumper.php" crc="397934801"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcherInterface.php" crc="-1747257335"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\UrlMatcher.php" crc="1998753679"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\TraceableUrlMatcher.php" crc="-1095679224"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RequestMatcherInterface.php" crc="-1082789536"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcherInterface.php" crc="-2138758935"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\RedirectableUrlMatcher.php" crc="649827173"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Matcher\ApacheUrlMatcher.php" crc="319679834"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\YamlFileLoader.php" crc="12809322"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\XmlFileLoader.php" crc="-1506137882"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\PhpFileLoader.php" crc="-1645053534"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\ClosureLoader.php" crc="286112535"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationFileLoader.php" crc="-1404116391"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationDirectoryLoader.php" crc="-901785158"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Loader\AnnotationClassLoader.php" crc="1223587361"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\PhpGeneratorDumper.php" crc="80613071"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumperInterface.php" crc="881922586"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\Dumper\GeneratorDumper.php" crc="655137653"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGeneratorInterface.php" crc="-941242400"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\UrlGenerator.php" crc="2064227724"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Generator\ConfigurableRequirementsInterface.php" crc="567925427"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\RouteNotFoundException.php" crc="-696027788"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\ResourceNotFoundException.php" crc="-1034057921"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MissingMandatoryParametersException.php" crc="-604770122"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\MethodNotAllowedException.php" crc="-1719158792"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\InvalidParameterException.php" crc="198800162"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Exception\ExceptionInterface.php" crc="102122905"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Annotation\Route.php" crc="381104065"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\RouterInterface.php" crc="-2143807403"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Router.php" crc="2008073450"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompilerInterface.php" crc="-184793487"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCompiler.php" crc="-685237448"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\RouteCollection.php" crc="-1789000034"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\Route.php" crc="-86861961"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContextAwareInterface.php" crc="-1683621518"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\RequestContext.php" crc="-469125520"/>
		<file name="C:\AVIDNYAT\silex\vendor\symfony\routing\CompiledRoute.php" crc="-511500703"/>
	</filescache>
</project>
